//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DLL.DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MedicalEntities : DbContext
    {
        public MedicalEntities()
            : base("name=MedicalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<admin> admins { get; set; }
        public virtual DbSet<Ad> Ads { get; set; }
        public virtual DbSet<Brand> Brands { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Medium> Media { get; set; }
        public virtual DbSet<Offer> Offers { get; set; }
        public virtual DbSet<Offer_details> Offer_details { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Order_Details> Order_Details { get; set; }
        public virtual DbSet<Proudcut> Proudcuts { get; set; }
        public virtual DbSet<Proudcut_Details> Proudcut_Details { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual ObjectResult<FilterProudct_Result> FilterProudct(string name, Nullable<int> category, string source, Nullable<decimal> fromprice, Nullable<decimal> toprice)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var frompriceParameter = fromprice.HasValue ?
                new ObjectParameter("fromprice", fromprice) :
                new ObjectParameter("fromprice", typeof(decimal));
    
            var topriceParameter = toprice.HasValue ?
                new ObjectParameter("toprice", toprice) :
                new ObjectParameter("toprice", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FilterProudct_Result>("FilterProudct", nameParameter, categoryParameter, sourceParameter, frompriceParameter, topriceParameter);
        }
    
        public virtual ObjectResult<FilterProudctBest_Result> FilterProudctBest(string name, Nullable<int> category, string source, Nullable<decimal> fromprice, Nullable<decimal> toprice)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var frompriceParameter = fromprice.HasValue ?
                new ObjectParameter("fromprice", fromprice) :
                new ObjectParameter("fromprice", typeof(decimal));
    
            var topriceParameter = toprice.HasValue ?
                new ObjectParameter("toprice", toprice) :
                new ObjectParameter("toprice", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FilterProudctBest_Result>("FilterProudctBest", nameParameter, categoryParameter, sourceParameter, frompriceParameter, topriceParameter);
        }
    
        public virtual ObjectResult<SearchResult_Result> SearchResult(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchResult_Result>("SearchResult", nameParameter);
        }
    }
}
